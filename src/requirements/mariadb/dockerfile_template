##----------------------
## ChatGPT Template

# Base image (choose version explicitly, avoid :latest)
FROM [base_image]:[version]

# Labels for metadata (optional but good practice)
LABEL maintainer="[your_name_or_email]" \
      version="[app_version]" \
      description="[short_description]"

# Set environment variables
ENV [key]=[value]

# Set working directory inside container
WORKDIR /[path]

# Copy files from host into container
COPY [source_path] [destination_path]

# Or fetch remote files
ADD [source_or_url] [destination_path]

# Install dependencies (example for Debian/Ubuntu base image)
RUN apt-get update && apt-get install -y \
    [package1] \
    [package2] \
 && rm -rf /var/lib/apt/lists/*

# Run custom build steps
RUN [custom_build_command]

# Expose a port (for networking)
EXPOSE [port_number]

# Define volumes (persistent storage)
VOLUME ["/container/path"]

# Define environment config files
ENV [ENV_VAR_NAME]=[value]

# Default command (overridden by `docker run ...`)
CMD ["executable", "param1", "param2"]

# Alternative entrypoint (sets main process, CMD is arguments)
ENTRYPOINT ["executable", "param1"]



##----------------------
## Erik

FROM alpine:3.20

RUN apk update && apk add --no-cache mariadb mariadb-client su-exec \
	&& mkdir -p /var/lib/mysql /var/run/mysqld \
	&& chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \
	&& sed -i 's/^skip-networking/bind-address=0.0.0.0/' \
		/etc/my.cnf.d/mariadb-server.cnf

COPY tools/start.sh /start.sh
RUN chmod +x /start.sh

EXPOSE 3306

CMD ["/start.sh"]

##----------------------
## Leo

# Mariadb Dockerfile
FROM debian:oldstable

# Install MariaDB
RUN apt-get update && \
    apt-get install -y gettext-base mariadb-server && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    mkdir -p /run/mysqld && \
    chown -R mysql:mysql /run/mysqld

# Copy the initialization script
COPY tools/start.sh /usr/local/bin/start.sh

# Set the script to be executable
RUN chmod +x /usr/local/bin/start.sh

ENTRYPOINT ["start.sh"]