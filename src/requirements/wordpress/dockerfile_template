##----------------------
## ChatGPT Template

# Base image (choose version explicitly, avoid :latest)
FROM [base_image]:[version]

# Labels for metadata (optional but good practice)
LABEL maintainer="[your_name_or_email]" \
      version="[app_version]" \
      description="[short_description]"

# Set environment variables
ENV [key]=[value]

# Set working directory inside container
WORKDIR /[path]

# Copy files from host into container
COPY [source_path] [destination_path]

# Or fetch remote files
ADD [source_or_url] [destination_path]

# Install dependencies (example for Debian/Ubuntu base image)
RUN apt-get update && apt-get install -y \
    [package1] \
    [package2] \
 && rm -rf /var/lib/apt/lists/*

# Run custom build steps
RUN [custom_build_command]

# Expose a port (for networking)
EXPOSE [port_number]

# Define volumes (persistent storage)
VOLUME ["/container/path"]

# Define environment config files
ENV [ENV_VAR_NAME]=[value]

# Default command (overridden by `docker run ...`)
CMD ["executable", "param1", "param2"]

# Alternative entrypoint (sets main process, CMD is arguments)
ENTRYPOINT ["executable", "param1"]



##----------------------
## Erik

FROM alpine:3.20

RUN apk update && apk add --no-cache \
	php83 php83-fpm php83-cli php83-mysqli php83-xml php83-json php83-curl \
	php83-gd php83-zip php83-dom php83-mbstring php83-phar ca-certificates \
	wget bash su-exec tar mariadb-client \
	&& wget -qO /usr/local/bin/wp https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar \
	&& chmod +x /usr/local/bin/wp \
	&& mkdir -p /var/www/html /var/log/php83 \
	&& echo "memory_limit = 512M" >> /etc/php83/php.ini \
	&& sed -i 's|^listen = .*|listen = 0.0.0.0:9000|' /etc/php83/php-fpm.d/www.conf

WORKDIR /var/www/html

COPY tools/start.sh /start.sh
RUN chmod +x /start.sh

EXPOSE 9000

CMD ["/start.sh"]

##----------------------
## Leo

# WordPress Dockerfile
FROM debian:oldstable

# Install PHP and required dependencies
RUN apt-get update && \
    apt-get install -y php-fpm php-mysql curl unzip default-mysql-client && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    mkdir -p /run/php

# Install WordPress
RUN curl -O https://wordpress.org/latest.tar.gz && \
    tar -xzf latest.tar.gz && \
    mkdir -p /var/www/html && \
    mv wordpress/* /var/www/html && \
    rm -rf latest.tar.gz wordpress /var/www/html/wp-config.php

# Set up PHP-FPM permissions
RUN chown -R www-data:www-data /var/www/html && \
    addgroup --gid 984 configgroup && \
    usermod -aG configgroup www-data

# Install wp-cli to manage WordPress from the command line
RUN curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar && \
    chmod +x wp-cli.phar && \
    mv wp-cli.phar /usr/local/bin/wp

# Copy the initialization script
COPY tools/start.sh /usr/local/bin/start.sh

# Set the script to be executable
RUN chmod +x /usr/local/bin/start.sh

ENTRYPOINT ["start.sh"]